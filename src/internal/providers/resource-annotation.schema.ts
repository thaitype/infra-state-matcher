import { z } from "zod";
import type { Equal, Expect } from "../types.js";
import type { ResourceAnnotationsPayload } from "./resource-annotation-payload.js";

export const resourceAnnotationsPayloadSchema = z.object({
  env: z.string(),
  site: z.string(),
  slot: z.string(),
  scope: z.string(),
  service: z.string(),
  resource_type: z.string(),
  metadata: z.record(z.string()).optional(),
});


export const baseResourceAnnotation = {
  /**
   * Unique identifier for the resource e.g. `azurerm_app_service.example`
   */
  address: z.string(),
  /**
   * Generated by @ref `ResourceAnnotation.generateId()`
   */
  ism_annotation_id: z.string().optional(),
  /**
   * Annotations for the resource
   */
  ism_annotations_payload: resourceAnnotationsPayloadSchema.optional(),
};

const baseResourceAnnotationSchema = z.object(baseResourceAnnotation);
export type BaseResourceAnnotation = z.infer<typeof baseResourceAnnotationSchema>;
export type GenericResourceAnnotation = BaseResourceAnnotation & Record<string, unknown>;